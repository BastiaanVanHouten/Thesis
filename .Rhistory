merged_movie_ranks_3000_8660 <- read_csv("merged_movie_ranks_3000_8660.csv")
merged_movie_ranks_3000_8660 <- merged_movie_ranks_3000_8660[, -c(2:5)]
library(readr)
movie_ranks_0_900_2_ <- read_csv("movie_ranks_0_900 (2).csv")
View(merged_movie_ranks_3000_8660)
# Install and load the lubridate package if you haven't already
install.packages("lubridate")
library(lubridate)
# Subtract one day from columns 2 to 1330
cols_to_update <- 2:1330
for (col in cols_to_update) {
merged_movie_ranks_3000_8660[, col] <- ymd(merged_movie_ranks_3000_8660[, col]) - days(1)
}
View(merged_movie_ranks_3000_8660)
View(movie_ranks_0_900_2_)
library(readr)
merged_movie_ranks_3000_8660 <- read_csv("merged_movie_ranks_3000_8660.csv")
merged_movie_ranks_3000_8660 <- merged_movie_ranks_3000_8660[, -c(2:5)]
View(merged_movie_ranks_3000_8660)
library(readr)
movie_ranks_0_900_2_ <- read_csv("movie_ranks_0_900 (2).csv")
View(movie_ranks_0_900_2_)
combined_dataset <- bind_rows(movie_ranks_0_900_2_, merged_movie_ranks_3000_8660)
combined_dataset <- rbind(movie_ranks_0_900_2_, merged_movie_ranks_3000_8660)
merged_movie_ranks_3000_8660<- merged_movie_ranks_3000_8660[, names(movie_ranks_0_900_2_]
merged_movie_ranks_3000_8660<- merged_movie_ranks_3000_8660[, names(movie_ranks_0_900_2_)]
library(lubridate)
# Assuming movie_ranks_0_900_2_ and merged_movie_ranks_3000_8660 are your data frames
# Subtract one day from date columns in merged_movie_ranks_3000_8660
date_columns <- names(merged_movie_ranks_3000_8660)[2:1330]
merged_movie_ranks_3000_8660[, date_columns] <- lapply(merged_movie_ranks_3000_8660[, date_columns], function(x) ymd(x) - days(1))
# Bind rows after adjusting date columns
combined_dataset <- rbind(movie_ranks_0_900_2_, merged_movie_ranks_3000_8660)
View(merged_movie_ranks_3000_8660)
# Subtract one day from date columns in merged_movie_ranks_3000_8660
date_columns <- names(merged_movie_ranks_3000_8660)[2:1330]
merged_movie_ranks_3000_8660[, date_columns] <- lapply(merged_movie_ranks_3000_8660[, date_columns], function(x) ymd(x) - days(1))
View(merged_movie_ranks_3000_8660)
merged_movie_ranks_3000_8660 <- read_csv("merged_movie_ranks_3000_8660.csv")
merged_movie_ranks_3000_8660 <- merged_movie_ranks_3000_8660[, -c(2:5)]
library(readr)
movie_ranks_900_1600 <- read_csv("movie_ranks_900_1600.csv")
View(movie_ranks_900_1600)
library(readr)
movie_ranks_1600_2300 <- read_csv("movie_ranks_1600_2300.csv")
View(movie_ranks_1600_2300)
movie_ranks_900_2300 <- rbind(movie_ranks_900_1600, movie_ranks_1600_2300)
library(readr)
movie_ranks_900_3000_1998_ <- read_csv("movie_ranks_900_3000_1998-.csv")
View(movie_ranks_900_3000_1998_)
movie_ranks_900_2300_complete <- inner_join(movie_ranks_900_2300, movie_ranks_900_3000_1998_)
library(dplyr)
movie_ranks_900_2300_complete <- inner_join(movie_ranks_900_2300, movie_ranks_900_3000_1998_)
View(movie_ranks_900_2300_complete)
movie_ranks_900_2300_complete <- inner_join(movie_ranks_900_3000_1998_, movie_ranks_900_2300)
View(movie_ranks_900_2300_complete)
library(readr)
movie_ranks_2300_3000 <- read_csv("movie_ranks_2300_3000.csv")
View(movie_ranks_2300_3000)
movie_ranks_2300_3000_complete <- inner_join(movie_ranks_900_3000_1998_, movie_ranks_2300_3000)
movie_ranks_2300_3000_complete <- inner_join(movie_ranks_900_3000_1998_, movie_ranks_2300_3000, by= "movie_id")
View(movie_ranks_2300_3000_complete)
# Select columns from movie_ranks_900_3000_1998 that are present in movie_ranks_2300_3000_complete
selected_columns <- intersect(colnames(movie_ranks_2300_3000_complete), colnames(movie_ranks_900_3000_1998))
# Select columns from movie_ranks_900_2300_complete that are present in movie_ranks_2300_3000_complete
selected_columns <- intersect(colnames(movie_ranks_2300_3000_complete), colnames(movie_ranks_900_2300_complete))
movie_ranks_900_3000_1998_selected <- movie_ranks_900_2300_complete[, selected_columns]
# Bind the rows
combined_dataset <- bind_rows(movie_ranks_2300_3000_complete, movie_ranks_900_3000_1998_selected)
# Convert character columns to dates in movie_ranks_900_3000_1998_selected
for (col in selected_columns) {
if (is.character(movie_ranks_900_3000_1998_selected[[col]])) {
movie_ranks_900_3000_1998_selected[[col]] <- ymd(movie_ranks_900_3000_1998_selected[[col]])
}
}
View(movie_ranks_900_3000_1998_selected)
View(movie_ranks_900_2300_complete)
View(movie_ranks_900_2300_complete)
View(movie_ranks_900_3000_1998_selected)
library(readr)
merged_movie_ranks_3000_8660 <- read_csv("merged_movie_ranks_3000_8660.csv")
View(merged_movie_ranks_3000_8660)
library(readr)
movie_ranks_0_900_2_ <- read_csv("movie_ranks_0_900 (2).csv")
View(movie_ranks_0_900_2_)
# Bind the rows
combined_dataset <- bind_rows(movie_ranks_0_900_2_, movie_ranks_900_2300_complete)
library(dplyr)
library(lubridate)
# Assuming movie_ranks_0_900_2_ is your data frame
# Convert column names to date
colnames(movie_ranks_0_900_2_) <- ymd(colnames(movie_ranks_0_900_2_))
# Convert column names to date with the specified format
colnames(movie_ranks_0_900_2_) <- ymd(colnames(movie_ranks_0_900_2_), format = "%Y-%m-%d")
# Convert column names to date with the specified format
colnames(movie_ranks_0_900_2_)[-1] <- ymd(colnames(movie_ranks_0_900_2_)[-1], format = "%Y-%m-%d")
library(readr)
movie_ranks_0_900_2_ <- read_csv("movie_ranks_0_900 (2).csv")
View(movie_ranks_0_900_2_)
# Convert column names (except the first one) to date with the specified format
new_colnames <- colnames(movie_ranks_0_900_2_)
new_colnames[-1] <- ymd(new_colnames[-1], format = "%Y-%m-%d")
# Assign the modified column names back to the data frame
colnames(movie_ranks_0_900_2_) <- new_colnames
library(readr)
movie_ranks_0_900_2_ <- read_csv("movie_ranks_0_900 (2).csv")
View(movie_ranks_0_900_2_)
# Get the original column names
original_colnames <- colnames(movie_ranks_0_900_2_)
# Convert column names (except the first one) to date
converted_colnames <- ymd(original_colnames[-1])
# Create a new vector of column names with the first name unchanged
new_colnames <- c(original_colnames[1], converted_colnames)
# Assign the modified column names back to the data frame
colnames(movie_ranks_0_900_2_) <- new_colnames
# Read CSV file and specify that all columns (except the first row) should be characters
movie_ranks_0_900_2_ <- read_csv("movie_ranks_0_900 (2).csv", col_types = cols(.default = col_character()))
View(movie_ranks_0_900_2_)
# Read the CSV file with all columns as numeric
movie_ranks <- read_csv(
"movie_ranks_0_900 (2).csv",
col_types = cols(
.default = col_number()  # Set all columns to numeric by default
)
)
library(dplyr)
# Read the CSV file with all columns as numeric
movie_ranks <- read_csv(
"movie_ranks_0_900 (2).csv",
col_types = cols(
.default = col_number()  # Set all columns to numeric by default
)
)
library(readr)
# Read the CSV file with all columns as numeric
movie_ranks <- read_csv(
"movie_ranks_0_900 (2).csv",
col_types = cols(
.default = col_number()  # Set all columns to numeric by default
)
)
View(movie_ranks)
# Read the CSV file with the first column as-is and the rest as numeric
movie_ranks <- read_csv(
"movie_ranks_0_900 (2).csv",
col_types = cols(
.default = col_number(),  # Set all non-first columns to numeric
`movie_id` = col_skip()  # Replace '1st_column_name' with the actual name of the first column
)
)
# Read the CSV file with the first column as-is and the rest as numeric
movie_ranks <- read_csv(
"movie_ranks_0_900 (2).csv",
col_types = cols(
.default = col_number(),  # Set all non-first columns to numeric
`movie_id` = col_skip()  # Replace '1st_column_name' with the actual name of the first column
)
)
View(movie_ranks)
library(readr)
merged_movie_ranks <- read_csv("merged_movie_ranks.csv")
View(merged_movie_ranks)
movie_ranks_900_2300 <- rbind(movie_ranks_900_1600, movie_ranks_1600_2300)
library(readr)
movie_ranks_900_1600 <- read_csv("movie_ranks_900_1600.csv")
View(movie_ranks_900_1600)
library(readr)
movie_ranks_1600_2300 <- read_csv("movie_ranks_1600_2300.csv")
View(movie_ranks_1600_2300)
movie_ranks_900_2300 <- rbind(movie_ranks_900_1600, movie_ranks_1600_2300)
movie_ranks_900_2300_complete <- inner_join(movie_ranks_900_3000_1998_, movie_ranks_900_2300)
library(readr)
movie_ranks_900_3000_1998_ <- read_csv("movie_ranks_900_3000_1998-.csv")
View(movie_ranks_900_3000_1998_)
movie_ranks_900_2300_complete <- inner_join(movie_ranks_900_3000_1998_, movie_ranks_900_2300)
movie_ranks_2300_3000_complete <- inner_join(movie_ranks_900_3000_1998_, movie_ranks_2300_3000, by= "movie_id")
library(readr)
movie_ranks_2300_3000 <- read_csv("movie_ranks_2300_3000.csv")
View(movie_ranks_2300_3000)
movie_ranks_2300_3000_complete <- inner_join(movie_ranks_900_3000_1998_, movie_ranks_2300_3000, by= "movie_id")
View(movie_ranks_2300_3000_complete)
View(movie_ranks_900_2300_complete)
View(movie_ranks_2300_3000_complete)
movie_ranks_900_3000 <- rbind(movie_ranks_900_2300_complete,movie_ranks_2300_3000_complete)
# Assuming you have two data frames: df1 and df2
# df1 has 1387 columns, df2 has 1335 columns
# Get the column names from df2
cols_to_keep <- colnames(movie_ranks_2300_3000_complete)
# Subset df1 to keep only the columns present in df2
movie_ranks_900_2300_subset <- movie_ranks_900_2300_complete[, cols_to_keep]
View(movie_ranks_900_2300_subset)
movie_ranks_900_3000 <- rbind(movie_ranks_900_2300_subset,movie_ranks_2300_3000_complete)
View(movie_ranks_900_3000)
write_csv(movie_ranks_900_3000, "movie_ranks_900_3000.csv")
# Read the CSV file while converting all columns except the first one to numeric
movie_ranks_900_3000 <- read_csv(
"movie_ranks_900_3000.csv",
col_types = cols(
.default = col_number(),  # Set all non-first columns to numeric
`movie_id` = col_character()  # Replace '1st_column_name' with the actual name of the first column
)
)
View(movie_ranks_900_3000)
# Read the CSV file while converting all columns except the first one to numeric
movie_ranks_900_3000 <- read_csv(
"movie_ranks_900_3000.csv",
col_types = cols(
.default = col_number(),  # Set all non-first columns to numeric
`movie_id` = col_character()  # Replace '1st_column_name' with the actual name of the first column
)
)
View(movie_ranks_900_3000)
# Read the CSV file with the first column as-is and the rest as numeric
movie_ranks <- read_csv(
"movie_ranks_0_900 (2).csv",
col_types = cols(
.default = col_number(),  # Set all non-first columns to numeric
`movie_id` = col_skip()  # Replace '1st_column_name' with the actual name of the first column
)
)
View(movie_ranks)
# Read the CSV file while converting all columns except the first one to numeric
movie_ranks_900 <- read_csv(
"movie_ranks_900(2).csv",
col_types = cols(
.default = col_number(),  # Set all non-first columns to numeric
`movie_id` = col_character()  # Replace '1st_column_name' with the actual name of the first column
)
)
# Read the CSV file while converting all columns except the first one to numeric
movie_ranks_900 <- read_csv(
"movie_ranks_900.csv",
col_types = cols(
.default = col_number(),  # Set all non-first columns to numeric
`movie_id` = col_character()  # Replace '1st_column_name' with the actual name of the first column
)
)
# Read the CSV file while converting all columns except the first one to numeric
movie_ranks_900 <- read_csv(
"movie_ranks_0_900.csv",
col_types = cols(
.default = col_number(),  # Set all non-first columns to numeric
`movie_id` = col_character()  # Replace '1st_column_name' with the actual name of the first column
)
)
View(movie_ranks_900)
# reading 3000 -> 8660 as numeric
# Read the CSV file while converting all columns except the first one to numeric
movie_ranks_3000_8660 <- read_csv(
"movie_ranks_3000_8660.csv",
col_types = cols(
.default = col_number(),  # Set all non-first columns to numeric
`movie_id` = col_character()  # Replace '1st_column_name' with the actual name of the first column
)
)
# reading 3000 -> 8660 as numeric
# Read the CSV file while converting all columns except the first one to numeric
movie_ranks_3000_8660 <- read_csv(
"merged_movie_ranks_3000_8660.csv",
col_types = cols(
.default = col_number(),  # Set all non-first columns to numeric
`movie_id` = col_character()  # Replace '1st_column_name' with the actual name of the first column
)
)
View(movie_ranks_3000_8660)
# Create a list of datasets
datasets_list <- list(
movie_ranks_900,
movie_ranks_900_3000,
movie_ranks_3000_8660
)
# Combine the datasets using rbind
combined_dataset <- do.call(rbind, datasets_list)
# removing extra columms because of wrong numbering
# List of column indices to remove (1-based index)
columns_to_remove <- c(2, 3, 4, 5)
# Remove the specified columns
movie_ranks_900_3000 <- movie_ranks_900_3000 %>%
select(-columns_to_remove)
# Save the modified dataset if needed
write.csv(movie_ranks_900_3000, file = 'modified_dataset.csv', row.names = FALSE)
# removing extra columms because of wrong numbering
# List of column indices to remove (1-based index)
columns_to_remove <- c(2, 3, 4, 5, 6)
# Remove the specified columns
movie_ranks_900_3000 <- movie_ranks_900_3000 %>%
select(-columns_to_remove)
# Save the modified dataset if needed
write.csv(movie_ranks_900_3000, file = 'modified_dataset.csv', row.names = FALSE)
# Read the CSV file while converting all columns except the first one to numeric
movie_ranks_900_3000 <- read_csv(
"movie_ranks_900_3000.csv",
col_types = cols(
.default = col_number(),  # Set all non-first columns to numeric
`movie_id` = col_character()  # Replace '1st_column_name' with the actual name of the first column
)
)
# removing extra columms because of wrong numbering
# List of column indices to remove (1-based index)
columns_to_remove <- c(2, 3, 4, 5, 6)
# Remove the specified columns
movie_ranks_900_3000 <- movie_ranks_900_3000 %>%
select(-columns_to_remove)
# Save the modified dataset if needed
write.csv(movie_ranks_900_3000, file = 'modified_dataset.csv', row.names = FALSE)
# removing extra columms because of wrong numbering
# List of column indices to remove (1-based index)
columns_to_remove <- c(2, 3, 4, 5)
# Remove the specified columns
movie_ranks_3000_8660 <- movie_ranks_3000_8660 %>%
select(-columns_to_remove)
# Save the modified dataset if needed
write.csv(movie_ranks_3000_8660, file = 'modified_dataset.csv', row.names = FALSE)
# Read the CSV file while converting all columns except the first one to numeric
movie_ranks_900_3000 <- read_csv(
"movie_ranks_900_3000.csv",
col_types = cols(
.default = col_number(),  # Set all non-first columns to numeric
`movie_id` = col_character()  # Replace '1st_column_name' with the actual name of the first column
)
)
# removing extra columms because of wrong numbering
# List of column indices to remove (1-based index)
columns_to_remove <- c(2, 3, 4, 5, 6)
# Remove the specified columns
movie_ranks_900_3000 <- movie_ranks_900_3000 %>%
select(-columns_to_remove)
# Save the modified dataset if needed
write.csv(movie_ranks_900_3000, file = 'modified_dataset_2.csv', row.names = FALSE)
View(movie_ranks_900)
# Load the lubridate package for handling dates
library(lubridate)
# Create a sequence of dates from '1998-02-03' to '2023-07-18'
start_date <- ymd('1998-02-03')
end_date <- ymd('2023-07-18')
date_sequence <- seq(start_date, end_date, by = '1 week')
# Convert the dates to character format with the desired format
new_column_names <- format(date_sequence, format = "%Y-%m-%d")
# Load your dataset
dataset <- read.csv('modified_dataset.csv')
# Rename the columns
names(dataset) <- new_column_names
View(dataset)
# Load the lubridate package for handling dates
library(lubridate)
# Create a sequence of dates from '1998-02-03' to '2023-07-18'
start_date <- ymd('1998-02-03')
end_date <- ymd('2023-07-18')
date_sequence <- seq(start_date, end_date, by = '1 week')
# Convert the dates to character format with the desired format
new_column_names <- c("movie_id", format(date_sequence, format = "%Y-%m-%d"))
# Load your dataset
dataset <- read.csv('modified_dataset.csv')
# Rename the columns
names(dataset) <- new_column_names
View(dataset)
# Load the lubridate package for handling dates
library(lubridate)
# Create a sequence of dates from '1998-02-03' to '2023-07-18'
start_date <- ymd('1998-02-03')
end_date <- ymd('2023-07-18')
date_sequence <- seq(start_date, end_date, by = '1 week')
# Convert the dates to character format with the desired format
new_column_names <- c("movie_id", format(date_sequence, format = "%Y-%m-%d"))
# Load your dataset
dataset <- read.csv('modified_dataset_2.csv')
# Rename the columns
names(dataset) <- new_column_names
# Create a sequence of dates from '1998-02-03' to '2023-07-18'
start_date <- ymd('1998-02-03')
end_date <- ymd('2023-07-18')
date_sequence <- seq(start_date, end_date, by = '1 week')
# Convert the dates to character format with the desired format
new_column_names <- c("movie_id", format(date_sequence, format = "%Y-%m-%d"))
# Load your dataset
dataset <- read.csv('modified_dataset.csv')
# Rename the columns
names(dataset) <- new_column_names
# Create a sequence of dates from '1998-02-03' to '2023-07-18'
start_date <- ymd('1998-02-03')
end_date <- ymd('2023-07-18')
date_sequence <- seq(start_date, end_date, by = '1 week')
# Convert the dates to character format with the desired format
new_column_names <- c("movie_id", format(date_sequence, format = "%Y-%m-%d"))
# Load your dataset
dataset_2 <- read.csv('modified_dataset_2.csv')
# Rename the columns
names(dataset) <- new_column_names
# Save the modified dataset if needed
write.csv(movie_ranks_900_3000, file = 'modified_dataset_2.csv', row.names = FALSE)
total_movie_ranks <- rbind(dataset, dataset_2)
View(dataset_2)
View(dataset)
# Load the lubridate package for handling dates
library(lubridate)
# Create a sequence of dates from '1998-02-03' to '2023-07-18'
start_date <- ymd('1998-02-03')
end_date <- ymd('2023-07-18')
date_sequence <- seq(start_date, end_date, by = '1 week')
# Convert the dates to character format with the desired format
new_column_names <- c("movie_id", format(date_sequence, format = "%Y-%m-%d"))
# Load your dataset
dataset_2 <- read.csv('modified_dataset_2.csv')
# Rename the columns
names(dataset) <- new_column_names
# Create a sequence of dates from '1998-02-03' to '2023-07-18'
start_date <- ymd('1998-02-03')
end_date <- ymd('2023-07-18')
date_sequence <- seq(start_date, end_date, by = '1 week')
# Convert the dates to character format with the desired format
new_column_names <- c("movie_id", format(date_sequence, format = "%Y-%m-%d"))
# Load your dataset
dataset_2 <- read.csv('modified_dataset_2.csv')
# Rename the columns
names(dataset_2) <- new_column_names
total_movie_ranks <- rbind(dataset, dataset_2)
View(total_movie_ranks)
total_movie_ranks <- rbind(movie_ranks_900,dataset_2, dataset )
View(total_movie_ranks)
# Save the modified dataset if needed
write.csv(movie_ranks_3000_8660, file = 'modified_dataset.csv', row.names = FALSE)
# Save the total dataset if needed
write.csv(total_movie_ranks, file = 'movie_ranks', row.names = FALSE)
# Save the total dataset if needed
write.csv(total_movie_ranks, file = 'movie_ranks.csv', row.names = FALSE)
library(readr)
movie_ranks <- read_csv("movie_ranks.csv")
View(movie_ranks)
library(readr)
cast_movies_data <- read_csv("cast_movies_data.csv")
View(cast_movies_data)
library(readr)
movie_details_OMDB_1000 <- read_csv("movie_details_OMDB_1000.csv")
View(movie_details_OMDB_1000)
install.packages("rethnicity")
library(rethnicity)
help(rethnicity)
predict_ethnicity(firstnames = "Samuel", lastnames = "Jackson", method = "fullname")
predict_ethnicity(firstnames = "Jimmie", lastnames = " Dale Gilmore", method = "fullname")
predict_ethnicity(firstnames = "Mark", lastnames = "Pellegrino", method = "fullname")
install.packages("ethnicolr")
library(ehtnicolr)
# Assuming your dataset is named cast_movies_data
# Split full names into parts
name_parts <- strsplit(cast_movies_data$cast_name, " ")
# Extract first and last names
cast_movies_data$first_name <- sapply(name_parts, "[", 1)
cast_movies_data$last_name <- sapply(name_parts, "[", length)
# Load the stringr package
library(stringr)
# Assuming your dataset is named cast_movies_data
# Split full names into parts using stringr
cast_movies_data$first_name <- word(cast_movies_data$cast_name, 1)
cast_movies_data$last_name <- str_replace(cast_movies_data$cast_name, paste0("^", cast_movies_data$first_name, " "), "")
# Print the modified dataset
print(cast_movies_data)
View(cast_movies_data)
# Extract first names and last names into separate vectors
first_names_vector <- cast_movies_data$first_name
last_names_vector <- cast_movies_data$last_name
predict_ethnicity(firstnames = first_names_vector, lastnames = last_names_vector, method = "fullname")
# Assuming your dataset is named cast_movies_data
# Count the number of unique names in the cast_name column
unique_names_count <- length(unique(cast_movies_data$cast_name))
# Print the count of unique names
print(unique_names_count)
predict_ethnicity(firstnames = first_names_vector, lastnames = last_names_vector, method = "fullname")
ethnicity_actors <- predict_ethnicity(firstnames = first_names_vector, lastnames = last_names_vector, method = "fullname")
View(ethnicity_actors)
# Assuming your dataframe is named ethnicity_actors
write.csv(ethnicity_actors, file = "ethnicity_actors.csv", row.names = FALSE)
count_high_prob <- ethnicity_actors %>%
filter(prob_asian > 0.9 | prob_black > 0.9 | prob_hispanic > 0.9 | prob_white > 0.9) %>%
nrow()
count_high_prob <- ethnicity_actors %>%
filter(prob_asian > 0.8 | prob_black > 0.8 | prob_hispanic > 0.8 | prob_white > 0.8) %>%
nrow()
count_high_prob <- ethnicity_actors %>%
filter(prob_asian > 0.75 | prob_black > 0.75 | prob_hispanic > 0.75 | prob_white > 0.75) %>%
nrow()
actors_with_ethnicity <- left_join(cast_movies_data, ethnicity_actors, by = c("first_name" = "firstname"  , "last_name" = "lastname"))
View(actors_with_ethnicity)
unique_ethnicity_actors <- distinct(ethnicity_actors, first_name, last_name, .keep_all = TRUE)
unique_ethnicity_actors <- distinct(ethnicity_actors, firstname, lastname, .keep_all = TRUE)
actors_with_ethnicity <- left_join(cast_movies_data, unique_ethnicity_actors, by = c("first_name" = "firstname"  , "last_name" = "lastname"))
View(actors_with_ethnicity)
# Assuming your dataframe is named ethnicity_actors
write.csv(actors_with_ethnicity, file = "actors_with_ethnicity.csv", row.names = FALSE)
library(readr)
actors_with_ethnicity <- read_csv("actors_with_ethnicity.csv")
View(actors_with_ethnicity)
library(readr)
main_base <- read_csv("gen/data-preparation/temp/main_base.csv")
View(main_base)
library(readr)
movie_details_OMDB_1000_2000 <- read_csv("movie_details_OMDB_1000_2000.csv")
View(movie_details_OMDB_1000_2000)
# Assuming movie_ranks is your dataset
# Check for duplicates in the "movie_id" column
duplicates <- movie_ranks[duplicated(movie_ranks$movie_id), ]
# Show the rows with duplicate movie_ids
print(duplicates)
View(duplicates)
# Remove duplicates from the "movie_id" column
unique_movie_ranks <- movie_ranks[!duplicated(movie_ranks$movie_id), ]
View(main_base)
# Assuming main_base is your dataset
# Count observations with no NAs or zeros
valid_observations <- main_base[complete.cases(main_base) & !apply(main_base == 0, 1, all), ]
num_valid_observations <- nrow(valid_observations)
# Print the number of valid observations
print(num_valid_observations)
