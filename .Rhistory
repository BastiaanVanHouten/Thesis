)
)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
rowSums(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')) == 0 |
is.na(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y'))) != 4)
)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
rowSums(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')) != 0 &
!is.na(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')))) >= 1
)
View(filtered_final_dataset)
final_dataset <- final_dataset %>%
mutate(combined_budget = budget1 + budget2 + budget3 + budget4)
final_dataset <- final_dataset %>%
mutate(combined_budget = budget + boxofficemojo.com_budget + Budget.x + Budget.y)
final_dataset <- final_dataset %>%
mutate(
budget = ifelse(budget1 == 0, NA, budget1),
boxofficemojo.com_budget = ifelse(budget2 == 0, NA, budget2),
Budget.x = ifelse(budget3 == 0, NA, budget3),
Budget.y = ifelse(budget4 == 0, NA, budget4),
combined_budget = rowSums(select(., c('budget1', 'budget2', 'budget3', 'budget4')), na.rm = TRUE)
)
final_dataset <- final_dataset %>%
mutate(
budget = ifelse(budget1 == 0, NA, budget1),
boxofficemojo.com_budget = ifelse(budget2 == 0, NA, budget2),
Budget.x = ifelse(budget3 == 0, NA, budget3),
Budget.y = ifelse(budget4 == 0, NA, budget4),
combined_budget = rowSums(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')), na.rm = TRUE)
)
final_dataset <- final_dataset %>%
mutate(
budget = ifelse(budget == 0, NA, budget),
boxofficemojo.com_budget = ifelse(boxofficemojo.com_budget == 0, NA, boxofficemojo.com_budget),
Budget.x = ifelse(Budget.x == 0, NA, Budget.x),
Budget.y = ifelse(Budget.y == 0, NA, Budget.y),
combined_budget = rowSums(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')), na.rm = TRUE)
)
final_dataset <- final_dataset %>%
mutate(
budget = as.numeric(ifelse(budget == 0, NA, budget)),
boxofficemojo.com_budget = as.numeric(ifelse(boxofficemojo.com_budget == 0, NA, boxofficemojo.com_budget)),
Budget.x = as.numeric(ifelse(Budget.x == 0, NA, Budget.x)),
Budget.y = as.numeric(ifelse(Budget.y == 0, NA, Budget.y)),
combined_budget = rowSums(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')), na.rm = TRUE)
)
final_dataset <- final_dataset %>%
mutate(
budget = ifelse(budget == 0, NA, budget),
boxofficemojo.com_budget = ifelse(boxofficemojo.com_budget == 0, NA, boxofficemojo.com_budget),
Budget.x = ifelse(Budget.x == 0, NA, Budget.x),
Budget.y = ifelse(Budget.y == 0, NA, Budget.y),
combined_budget = rowSums(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')), na.rm = TRUE)
)
# Check the data types and identify non-numeric values
str(final_dataset)
final_dataset <- final_dataset %>%
mutate(
budget = as.numeric(ifelse(budget == 0, NA, budget)),
boxofficemojo.com_budget = as.numeric(ifelse(boxofficemojo.com_budget == 0, NA, boxofficemojo.com_budget)),
Budget.x = as.numeric(ifelse(Budget.x == "0", NA, Budget.x)), # Convert "0" to NA
Budget.y = as.numeric(ifelse(Budget.y == "0", NA, Budget.y)), # Convert "0" to NA
combined_budget = rowSums(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')), na.rm = TRUE)
)
# Check the data types and identify non-numeric values
str(final_dataset)
# Changing not available Budget.x to zero's
final_dataset <- final_dataset %>%
mutate(Budget = ifelse(Budget == 'Not available', 0, Budget))
# Changing not available Budget.x to zero's
final_dataset <- final_dataset %>%
mutate(Budget.x = ifelse(Budget.x == 'Not available', 0, Budget.x))
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
rowSums(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')) != 0 &
!is.na(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')))) >= 1
)
final_dataset <- final_dataset %>%
mutate(
budget = as.numeric(ifelse(budget == 0, NA, budget)),
boxofficemojo.com_budget = as.numeric(ifelse(boxofficemojo.com_budget == 0, NA, boxofficemojo.com_budget)),
Budget.x = as.numeric(ifelse(Budget.x == "0", NA, Budget.x)), # Convert "0" to NA
Budget.y = as.numeric(ifelse(Budget.y == "0", NA, Budget.y)), # Convert "0" to NA
combined_budget = rowSums(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')), na.rm = TRUE)
)
# Check the data types and identify non-numeric values
str(final_dataset)
filtered_final_dataset <- filtered_final_dataset %>%
mutate(
budget = as.numeric(ifelse(budget == 0, NA, budget)),
boxofficemojo.com_budget = as.numeric(ifelse(boxofficemojo.com_budget == 0, NA, boxofficemojo.com_budget)),
Budget.x = as.numeric(ifelse(Budget.x == "0", NA, Budget.x)), # Convert "0" to NA
Budget.y = as.numeric(ifelse(Budget.y == "0", NA, Budget.y)), # Convert "0" to NA
combined_budget = rowSums(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')), na.rm = TRUE)
)
final_dataset <- full_join(combined_everything , awards_ratings, by = c("imdb_id" = "IMDb ID"))
MASTER_2000_2020.csv <- read_csv("data/MASTER_2000-2020.csv")
main_base <- read_csv("gen/data-preparation/temp/main_base.csv")
scraped_budgets_imdb <- read_csv("data/scraped/scraped_budgets_imdb.csv")
scraped_budgets_TMDB <- read_csv("data/scraped/movie_budget_revenue_sequal_TMDB.csv")
awards_ratings <- read_csv("gen/data-preparation/temp/awards_ratings.csv")
combined <- full_join(main_base, MASTER_2000_2020.csv, by = c("imdb_id" = "imdb.com_imdbid"))
combined_with_budget <- full_join(combined, scraped_budgets_imdb, by = c("imdb_id" = "Movie ID"))
combined_everything <- full_join(combined_with_budget, scraped_budgets_TMDB, by = c("title" = "Title"))
final_dataset <- full_join(combined_everything , awards_ratings, by = c("imdb_id" = "IMDb ID"))
# Changing not available Budget.x to zero's
final_dataset <- final_dataset %>%
mutate(Budget.x = ifelse(Budget.x == 'Not available', 0, Budget.x))
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
rowSums(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')) != 0) >= 1
)
# Assuming 'final_dataset' is your dataset
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
!(budget == 0 & boxofficemojo.com_budget == 0 & Budget.x == 0 & Budget.y == 0)
)
final_dataset <- full_join(combined_everything , awards_ratings, by = c("imdb_id" = "IMDb ID"))
# Changing "Not available" in Budget.x and NA in Budget.y to zeros
final_dataset <- final_dataset %>%
mutate(
Budget.x = ifelse(Budget.x == 'Not available', 0, Budget.x),
Budget.y = ifelse(is.na(Budget.y), 0, Budget.y)
)
# Changing "Not available" in Budget.x and NA in Budget.y to zeros
final_dataset <- final_dataset %>%
mutate(
Budget.x = ifelse(Budget.x == 'Not available', 0, Budget.x),
Budget.y = ifelse(is.na(Budget.y), 0, Budget.y),
boxofficemojo.com_budget = ifelse(is.na(boxofficemojo.com_budget), 0, boxofficemojo.com_budget)
)
View(final_dataset)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != ""
)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
!(budget == 0 & boxofficemojo.com_budget == 0 & Budget.x == 0 & Budget.y == 0)
)
# Check the data types and identify non-numeric values
str(filtered_final_dataset)
filtered_final_dataset_budget <- filtered_final_dataset %>%
mutate(
total_budget = budget + boxofficemojo.com_budget + Budget.x + Budget.y +
count_non_missing = rowSums(!is.na(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x','Budget.y')))),
filtered_final_dataset_budget <- filtered_final_dataset %>%
mutate(
total_budget = budget + boxofficemojo.com_budget + Budget.x + Budget.y,
count_non_missing = rowSums(!is.na(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')))),
average_budget = total_budget / count_non_missing
)
filtered_final_dataset_budget <- filtered_final_dataset %>%
mutate(
budget = as.numeric(gsub("\\$", "", budget)),
boxofficemojo.com_budget = as.numeric(gsub("\\$", "", boxofficemojo.com_budget)),
Budget.x = as.numeric(gsub("\\$", "", Budget.x)),
Budget.y = as.numeric(gsub("\\$", "", Budget.y)),
total_budget = budget + boxofficemojo.com_budget + Budget.x + Budget.y,
count_non_missing = rowSums(!is.na(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')))),
average_budget = total_budget / count_non_missing
)
View(filtered_final_dataset_budget)
unique(filtered_final_dataset$boxofficemojo.com_budget)
filtered_final_dataset_budget <- filtered_final_dataset %>%
mutate(
budget = as.numeric(gsub("\\$", "", budget)),
boxofficemojo.com_budget = as.numeric(gsub("[^0-9.]", "", boxofficemojo.com_budget)),
Budget.x = as.numeric(gsub("\\$", "", Budget.x)),
Budget.y = as.numeric(gsub("\\$", "", Budget.y)),
total_budget = budget + boxofficemojo.com_budget + Budget.x + Budget.y,
count_non_missing = rowSums(!is.na(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')))),
average_budget = total_budget / count_non_missing
)
unique(filtered_final_dataset$Budget.x)
filtered_final_dataset_budget <- filtered_final_dataset %>%
mutate(
budget = as.numeric(gsub("\\$", "", budget)),
boxofficemojo.com_budget = as.numeric(gsub("[^0-9.]", "", boxofficemojo.com_budget)),
Budget.x = as.numeric(gsub("\\$", "", Budget.x)), # Remove "$" sign
Budget.x = ifelse(Budget.x == "Not available" | is.na(Budget.x), 0, Budget.x), # Replace "Not available" and NA with 0
Budget.y = as.numeric(gsub("\\$", "", Budget.y)),
total_budget = budget + boxofficemojo.com_budget + Budget.x + Budget.y,
count_non_missing = rowSums(!is.na(select(., c('budget', 'boxofficemojo.com_budget', 'Budget.x', 'Budget.y')))),
average_budget = total_budget / count_non_missing
)
unique(filtered_final_dataset_budget$average_budget)
library(readr)
awards_ratings <- read_csv("gen/data-preparation/temp/awards_ratings.csv")
View(awards_ratings)
View(main_base)
library(readr)
scraped_budgets_imdb <- read_csv("data/scraped/scraped_budgets_imdb.csv")
View(scraped_budgets_imdb)
library(readr)
movie_budget_revenue_sequal_TMDB <- read_csv("data/scraped/movie_budget_revenue_sequal_TMDB.csv")
View(movie_budget_revenue_sequal_TMDB)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
)
View(filtered_final_dataset)
library(readr)
movie_ranks <- read_csv("gen/data-preparation/output/movie_ranks.csv")
View(movie_ranks)
View(filtered_final_dataset)
unique(filtered_final_dataset$imdb.com_year)
# Check the data types and identify non-numeric values
str(filtered_final_dataset)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
!is.na(`boxofficemojo.com_openinggross`) & `boxofficemojo.com_openinggross` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
!is.na(`boxofficemojo.com_openinggross`) & `boxofficemojo.com_openinggross` != "",
!is.na(`imdb.com_sequel`) & `imdb.com_sequel` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
!is.na(`boxofficemojo.com_openinggross`) & `boxofficemojo.com_openinggross` != "",
!is.na(`imdb.com_sequel`) & `imdb.com_sequel` != "",
!is.na(`imdb.com_basedonbook`) & `imdb.com_basedonbook` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
)
# Using names() function
column_names <- names(filtered_final_dataset)
# Using colnames() function (works the same as names())
column_names <- colnames(filtered_final_dataset)
print(column_names)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
!is.na(`boxofficemojo.com_openinggross`) & `boxofficemojo.com_openinggross` != "",
!is.na(`imdb.com_sequel`) & `imdb.com_sequel` != "",
!is.na(`imdb.com_basedonbook`) & `imdb.com_basedonbook` != "",
!is.na(`imdb.com_basedonshortstory`) & `imdb.com_basedonshortstory` != "",
!is.na(`imdb.com_basedonnovel`) & `imdb.com_basedonnovel` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
!is.na(`boxofficemojo.com_openinggross`) & `boxofficemojo.com_openinggross` != "",
!is.na(`imdb.com_sequel`) & `imdb.com_sequel` != "",
!is.na(`imdb.com_basedonbook`) & `imdb.com_basedonbook` != "",
!is.na(`imdb.com_basedonshortstory`) & `imdb.com_basedonshortstory` != "",
!is.na(`imdb.com_basedonnovel`) & `imdb.com_basedonnovel` != "",
!is.na(`imdb.com_basedontvmovie`) & `imdb.com_basedontvmovie` != "",
!is.na(`imdb.com_basedonplay`) & `imdb.com_basedonplay` != "",
!is.na(`imdb.com_basedontvseries`) & `imdb.com_basedontvseries` != "",
!is.na(`imdb.com_spinoff`) & `imdb.com_spinoff` != "",
!is.na(`imdb.com_remake`) & `imdb.com_remake` != "",
!is.na(`imdb.com_basedonbookseries`) & `imdb.com_basedonbookseries` != "",
!is.na(`imdb.com_basedoncomic`) & `imdb.com_basedoncomic` != "",
!is.na(`imdb.com_basedoncomicbook`) & `imdb.com_basedoncomicbook` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
!is.na(`boxofficemojo.com_openinggross`) & `boxofficemojo.com_openinggross` != "",
!is.na(`imdb.com_sequel`) & `imdb.com_sequel` != "",
!is.na(`imdb.com_basedonbook`) & `imdb.com_basedonbook` != "",
!is.na(`imdb.com_basedonshortstory`) & `imdb.com_basedonshortstory` != "",
!is.na(`imdb.com_basedonnovel`) & `imdb.com_basedonnovel` != "",
!is.na(`imdb.com_basedontvmovie`) & `imdb.com_basedontvmovie` != "",
!is.na(`imdb.com_basedonplay`) & `imdb.com_basedonplay` != "",
!is.na(`imdb.com_basedontvseries`) & `imdb.com_basedontvseries` != "",
!is.na(`imdb.com_spinoff`) & `imdb.com_spinoff` != "",
!is.na(`imdb.com_remake`) & `imdb.com_remake` != "",
!is.na(`imdb.com_basedonbookseries`) & `imdb.com_basedonbookseries` != "",
!is.na(`imdb.com_basedoncomic`) & `imdb.com_basedoncomic` != "",
!is.na(`imdb.com_basedoncomicbook`) & `imdb.com_basedoncomicbook` != "",
!is.na(`production`) & `production` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
!is.na(`boxofficemojo.com_openinggross`) & `boxofficemojo.com_openinggross` != "",
!is.na(`imdb.com_sequel`) & `imdb.com_sequel` != "",
!is.na(`imdb.com_basedonbook`) & `imdb.com_basedonbook` != "",
!is.na(`imdb.com_basedonshortstory`) & `imdb.com_basedonshortstory` != "",
!is.na(`imdb.com_basedonnovel`) & `imdb.com_basedonnovel` != "",
!is.na(`imdb.com_basedontvmovie`) & `imdb.com_basedontvmovie` != "",
!is.na(`imdb.com_basedonplay`) & `imdb.com_basedonplay` != "",
!is.na(`imdb.com_basedontvseries`) & `imdb.com_basedontvseries` != "",
!is.na(`imdb.com_spinoff`) & `imdb.com_spinoff` != "",
!is.na(`imdb.com_remake`) & `imdb.com_remake` != "",
!is.na(`imdb.com_basedonbookseries`) & `imdb.com_basedonbookseries` != "",
!is.na(`imdb.com_basedoncomic`) & `imdb.com_basedoncomic` != "",
!is.na(`imdb.com_basedoncomicbook`) & `imdb.com_basedoncomicbook` != "",
!is.na(`production_companies`) & `production_companies` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
)
View(filtered_final_dataset)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
!is.na(`boxofficemojo.com_openinggross`) & `boxofficemojo.com_openinggross` != "",
!is.na(`imdb.com_sequel`) & `imdb.com_sequel` != "",
!is.na(`imdb.com_basedonbook`) & `imdb.com_basedonbook` != "",
!is.na(`imdb.com_basedonshortstory`) & `imdb.com_basedonshortstory` != "",
!is.na(`imdb.com_basedonnovel`) & `imdb.com_basedonnovel` != "",
!is.na(`imdb.com_basedontvmovie`) & `imdb.com_basedontvmovie` != "",
!is.na(`imdb.com_basedonplay`) & `imdb.com_basedonplay` != "",
!is.na(`imdb.com_basedontvseries`) & `imdb.com_basedontvseries` != "",
!is.na(`imdb.com_spinoff`) & `imdb.com_spinoff` != "",
!is.na(`imdb.com_remake`) & `imdb.com_remake` != "",
!is.na(`imdb.com_basedonbookseries`) & `imdb.com_basedonbookseries` != "",
!is.na(`imdb.com_basedoncomic`) & `imdb.com_basedoncomic` != "",
!is.na(`imdb.com_basedoncomicbook`) & `imdb.com_basedoncomicbook` != "",
!is.na(`imdb_production`) & `imdb_production` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
)
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
!is.na(`boxofficemojo.com_openinggross`) & `boxofficemojo.com_openinggross` != "",
!is.na(`imdb.com_sequel`) & `imdb.com_sequel` != "",
!is.na(`imdb.com_basedonbook`) & `imdb.com_basedonbook` != "",
!is.na(`imdb.com_basedonshortstory`) & `imdb.com_basedonshortstory` != "",
!is.na(`imdb.com_basedonnovel`) & `imdb.com_basedonnovel` != "",
!is.na(`imdb.com_basedontvmovie`) & `imdb.com_basedontvmovie` != "",
!is.na(`imdb.com_basedonplay`) & `imdb.com_basedonplay` != "",
!is.na(`imdb.com_basedontvseries`) & `imdb.com_basedontvseries` != "",
!is.na(`imdb.com_spinoff`) & `imdb.com_spinoff` != "",
!is.na(`imdb.com_remake`) & `imdb.com_remake` != "",
!is.na(`imdb.com_basedonbookseries`) & `imdb.com_basedonbookseries` != "",
!is.na(`imdb.com_basedoncomic`) & `imdb.com_basedoncomic` != "",
!is.na(`imdb.com_basedoncomicbook`) & `imdb.com_basedoncomicbook` != "",
!is.na(`imdb.com_production`) & `imdb.com_production` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
)
filtered_final_dataset_already_done <- filtered_final_dataset%>%
filter(imdb_id %in% movie_ranks$movie_id)
View(filtered_final_dataset_already_done)
filtered_final_dataset_not_done <- filtered_final_dataset %>%
filter(!(imdb_id %in% movie_ranks$movie_id))
View(filtered_final_dataset_not_done)
write.csv(filtered_final_dataset_not_done, "filtered_not_done.csv")
# Assuming 'final_dataset' is your dataset
filtered_final_dataset <- final_dataset %>%
filter(
!is.na(`boxofficemojo.com_openingtheaters`) & `boxofficemojo.com_openingtheaters` != "",
!is.na(`boxofficemojo.com_openinggross`) & `boxofficemojo.com_openinggross` != "",
!is.na(`imdb.com_sequel`) & `imdb.com_sequel` != "",
!is.na(`imdb.com_basedonbook`) & `imdb.com_basedonbook` != "",
!is.na(`imdb.com_basedonshortstory`) & `imdb.com_basedonshortstory` != "",
!is.na(`imdb.com_basedonnovel`) & `imdb.com_basedonnovel` != "",
!is.na(`imdb.com_basedontvmovie`) & `imdb.com_basedontvmovie` != "",
!is.na(`imdb.com_basedonplay`) & `imdb.com_basedonplay` != "",
!is.na(`imdb.com_basedontvseries`) & `imdb.com_basedontvseries` != "",
!is.na(`imdb.com_spinoff`) & `imdb.com_spinoff` != "",
!is.na(`imdb.com_remake`) & `imdb.com_remake` != "",
!is.na(`imdb.com_basedonbookseries`) & `imdb.com_basedonbookseries` != "",
!is.na(`imdb.com_basedoncomic`) & `imdb.com_basedoncomic` != "",
!is.na(`imdb.com_basedoncomicbook`) & `imdb.com_basedoncomicbook` != "",
!is.na(`imdb.com_production`) & `imdb.com_production` != "",
!is.na(`boxofficemojo.com_runtime`) & `boxofficemojo.com_runtime` != "",
imdb.com_year >= 1998 & imdb.com_year <= 2019,
)
filtered_final_dataset_not_done <- filtered_final_dataset %>%
filter(!(imdb_id %in% movie_ranks$movie_id))
write.csv(filtered_final_dataset_not_done, "filtered_not_done.csv")
write.csv(filtered_final_dataset_not_done, "filtered_not_done.csv")
library(readr)
cast <- read_csv("gen/data-preparation/temp/cast.csv")
View(cast)
library(readr)
movie_cast_not_done <- read_csv("movie_cast_not_done.csv")
View(movie_cast_not_done)
library(readr)
filtered_cast <- read_csv("data/filtered_cast.csv")
View(filtered_cast)
library(readr)
unique_actors <- read_csv("gen/data-preparation/temp/unique_actors.csv")
View(unique_actors)
cast_main_base <- read_csv("cast_main_base.csv")
cast_2018_2019 <- read_csv("data/scraped/movie_cast_2018_2019.csv")
cast_2018_2019 <- read_csv("data/scraped/movie_cast_2018_2019.csv")
cast_main_base <- read_csv("data/scraped/cast_main_base.csv")
cast_not_done <- read_csv("data/scraped/movie_cast_not_done.csv")
cast_2018_2019 <- read_csv("data/scraped/movie_cast_2018_2019.csv")
cast_main_base <- read_csv("data/scraped/cast_main_base.csv")
cast_not_done <- read_csv("data/scraped/movie_cast_not_done.csv")
View(cast_2018_2019)
View(cast_main_base)
View(cast_not_done)
cast <- rbind(cast_main_base, cast_2018_2019, cast_not_done)
write.csv(cast, file = "cast.csv", row.names = FALSE)
write.csv(cast, file = "gen/temp/cast.csv", row.names = FALSE)
write.csv(cast, file = "gen/data-preparation/temp/cast.csv", row.names = FALSE)
# filtering for cast without url
filtered_cast <- cast %>%
filter(
`Profile Picture` != "https://image.tmdb.org/t/p/w500None"
)
library(dplyr)
# filtering for cast without url
filtered_cast <- cast %>%
filter(
`Profile Picture` != "https://image.tmdb.org/t/p/w500None"
)
View(filtered_cast)
write.csv(filtered_cast, file = "gen/data-preparation/temp/no_url_cast.csv")
# filtering for cast without url and in Master
filtered_cast <- cast %>%
filter(
`Movie ID` %in% MASTER_2000_2020.csv$imdb.com_imdbid,
`Profile Picture` != "https://image.tmdb.org/t/p/w500None"
)
# Replace "path/to/save/csv/file.csv" with the actual path where you want to save the CSV file
write.csv(filtered_2018_2019_master, file = "filtered_2018_2019_master.csv", row.names = FALSE)
cast_2018_2019 <- read_csv("data/scraped/movie_cast_2018_2019.csv")
cast_main_base <- read_csv("data/scraped/cast_main_base.csv")
cast_not_done <- read_csv("data/scraped/movie_cast_not_done.csv")
cast <- rbind(cast_main_base, cast_2018_2019, cast_not_done)
# filtering for cast without url and in Master
filtered_cast <- cast %>%
filter(
`Profile Picture` != "https://image.tmdb.org/t/p/w500None"
)
# filtering for cast without url and in Master
filtered_cast <- cast %>%
filter(
`Movie ID` %in% MASTER_2000_2020.csv$imdb.com_imdbid,
`Profile Picture` != "https://image.tmdb.org/t/p/w500None"
)
write.csv(filtered_cast, file = "gen/data-preparation/temp/no_url_in_master_cast.csv")
filtered_cast <- read_csv("gen/data-preparation/temp/no_url_in_master_cast.csv")
unique_id <- filtered_cast%>%
distinct(`Movie ID`)
# Assuming 'filtered_cast' is your dataset
unique_actors <- filtered_cast %>%
distinct(actor_imdb_id, .keep_all = TRUE)
write_csv(unique_actors, "unique_actors.csv")
View(unique_actors)
ethnicity_kairos <- read_csv("data/ethnicity_kairo_TMDB.csv")
library(readr)
ethnicity_kairo_TMDB <- read_csv("data/ethnicity_kairo_TMDB.csv")
View(ethnicity_kairo_TMDB)
# making actors already ethnicity scraped
unique_actors_not_done <- unique_actors %>%
filter(`Profile Picture` %in% ethnicity_kairo_TMDB$image_url)
# making actors already ethnicity scraped
unique_actors_not_done <- unique_actors %>%
filter(!`Profile Picture` %in% ethnicity_kairo_TMDB$image_url)
write.csv(unique_actors_not_done, "gen/data-preparation/temp/unique_actors_not_done")
write.csv(unique_actors_not_done, "gen/data-preparation/temp/unique_actors_not_done.csv")
library(readr)
no_url_cast <- read_csv("gen/data-preparation/temp/no_url_cast.csv")
View(no_url_cast)
cast_url <- read.csv("gen/data-preparation/temp/url_in_master_cast.csv")
cast <- read.csv("gen/data-preparation/temp/cast.sv")
cast <- read.csv("gen/data-preparation/temp/cast.csv")
View(cast)
no_url_actors <- cast%>%
filter(Profile.Picture == "https://image.tmdb.org/t/p/w500None")
no_url_cast <- cast%>%
filter(Profile.Picture == "https://image.tmdb.org/t/p/w500None")
no_url_cast <- cast %>%
filter(Profile.Picture == "https://image.tmdb.org/t/p/w500None" & !is.na(actor_imdb_id))
View(no_url_cast)
unique_no_url_cast <- no_url_cast %>%
distinct(actor_imdb_id, .keep_all = TRUE)
write.csv(unique_no_url_cast, "gen/data-preparation/temp/unique_no_url_cast.csv")
